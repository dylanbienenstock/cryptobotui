// <auto-generated />
using System;
using CryptoBotUI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CryptoBotUI.Migrations
{
    [DbContext(typeof(StrategyContext))]
    partial class StrategyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("CryptoBotUI.Models.DirectoryNodeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Locked");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("DirectoryNodes");

                    b.HasData(
                        new
                        {
                            Id = -2,
                            Locked = true,
                            Name = "Strategies"
                        },
                        new
                        {
                            Id = -1,
                            Locked = true,
                            Name = "Modules"
                        },
                        new
                        {
                            Id = -5,
                            Locked = true,
                            Name = "Pair Selectors",
                            ParentId = -1
                        },
                        new
                        {
                            Id = -4,
                            Locked = true,
                            Name = "Signal Emitters",
                            ParentId = -1
                        },
                        new
                        {
                            Id = -3,
                            Locked = true,
                            Name = "Order Managers",
                            ParentId = -1
                        });
                });

            modelBuilder.Entity("CryptoBotUI.Models.FileNodeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<bool>("Locked");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("FileNodes");
                });

            modelBuilder.Entity("CryptoBotUI.Models.ProblemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FileNodeId");

                    b.Property<string>("Message");

                    b.Property<int>("StartColumn");

                    b.Property<int>("StartLineNumber");

                    b.HasKey("Id");

                    b.HasIndex("FileNodeId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("CryptoBotUI.Models.DirectoryNodeModel", b =>
                {
                    b.HasOne("CryptoBotUI.Models.DirectoryNodeModel", "Parent")
                        .WithMany("Directories")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("CryptoBotUI.Models.FileNodeModel", b =>
                {
                    b.HasOne("CryptoBotUI.Models.DirectoryNodeModel", "Parent")
                        .WithMany("Files")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("CryptoBotUI.Models.ProblemModel", b =>
                {
                    b.HasOne("CryptoBotUI.Models.FileNodeModel", "FileNode")
                        .WithMany("Problems")
                        .HasForeignKey("FileNodeId");
                });
#pragma warning restore 612, 618
        }
    }
}
